#!/usr/bin/env php
<?php
ini_set('display_errors', 'on');
ini_set('display_startup_errors', 'on');

error_reporting(E_ALL & ~E_DEPRECATED & ~E_USER_DEPRECATED);

set_error_handler(static function ($severity, $message, $file, $line) {
    if ($severity & error_reporting()) {
        throw new ErrorException($message, 0, $severity, $file, $line);
    }
});

! defined('BASE_PATH') && define('BASE_PATH', dirname(__DIR__, 1));
! defined('APP_PATH') && define('APP_PATH', BASE_PATH . '/src');

require BASE_PATH . '/vendor/autoload.php';

$container = new Polynds\KPanel\Lib\DI\Container();
Polynds\KPanel\ApplicationContext::setContainer($container);

(static function () {
    Polynds\KPanel\ApplicationContext::getContainer()->set(Polynds\KPanel\Lib\Config::class, new Polynds\KPanel\Lib\Config());
    Polynds\KPanel\ApplicationContext::getContainer()->set(Polynds\KPanel\Lib\Event\EventDispatcher::class, new Polynds\KPanel\Lib\Event\EventDispatcher());
    Polynds\KPanel\ApplicationContext::getContainer()->set(Polynds\KPanel\Lib\Logger::class, new Polynds\KPanel\Lib\Logger());
})();

$app = new Polynds\KPanel\Application();
$app->run();
